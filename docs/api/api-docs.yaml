openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
tags:
- name: Authentication
  description: Endpoints related to user authentication
- name: Teams
  description: Operations related to MLB teams and standings
paths:
  /api/auth/reset-password:
    post:
      tags:
      - Authentication
      summary: Reset user password
      description: Allows the user to set a new password using a valid recovery code.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
        required: true
      responses:
        "200":
          description: Password successfully reset
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Invalid or expired recovery code
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/register:
    post:
      tags:
      - Authentication
      summary: Register new user
      description: Creates a new user account in the system.
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
        required: true
      responses:
        "200":
          description: User successfully registered
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Invalid registration data
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "409":
          description: User already exists in the database
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/refresh:
    post:
      tags:
      - Authentication
      summary: Refresh JWT token
      description: Generates new JWT tokens using the refresh token stored in cookies.
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        description: Refresh token (from cookie named RefreshToken)
        required: false
        schema:
          type: string
      responses:
        "200":
          description: Token refreshed successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid or expired refresh token
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - Authentication
      summary: User logout
      description: Clears authentication cookies and invalidates session tokens.
      operationId: logOut
      responses:
        "200":
          description: Logout successful
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - Authentication
      summary: User login
      description: Authenticates the user and returns JWT tokens (access and refresh).
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: Login successful
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "401":
          description: Invalid credentials
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/forgot-password:
    post:
      tags:
      - Authentication
      summary: Request password recovery
      description: Sends a recovery email to the user containing a reset link or verification
        code.
      operationId: forgotPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
        required: true
      responses:
        "200":
          description: Recovery email sent successfully
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "400":
          description: Invalid email address
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "404":
          description: There is no user registered with this email
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/users:
    get:
      tags:
      - user-controller
      operationId: getUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShowUser"
  /api/teams:
    get:
      tags:
      - Teams
      summary: Get all teams
      description: Returns a list of all MLB teams with calculated stats
      operationId: getAllTeams
      responses:
        "200":
          description: Successfully retrieved list of teams
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamDTO"
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamDTO"
  /api/teams/standings:
    get:
      tags:
      - Teams
      summary: Get team standings
      description: "Returns standings grouped by league and division, ordered by win\
        \ percentage"
      operationId: getStandings
      responses:
        "200":
          description: Successfully retrieved standings
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamDTO"
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    type: array
                    items:
                      $ref: "#/components/schemas/TeamDTO"
  /api/auth/me:
    get:
      tags:
      - Authentication
      summary: Get theActive User
      description: Obtain details of the currently authenticated user.
      operationId: getActiveUser
      responses:
        "200":
          description: User Successfully Authenticated
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserRole"
        "401":
          description: User Not Authenticated
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserRole"
components:
  schemas:
    ResetPasswordRequest:
      type: object
      properties:
        code:
          type: string
          pattern: "\\d{4}"
        newPassword:
          type: string
      required:
      - code
      - newPassword
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    RegisterRequest:
      type: object
      properties:
        email:
          type: string
        username:
          type: string
        password:
          type: string
      required:
      - email
      - password
      - username
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
      required:
      - email
    ShowUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    TeamDTO:
      type: object
      properties:
        name:
          type: string
        abbreviation:
          type: string
        teamLogo:
          type: string
        league:
          type: string
          enum:
          - AL
          - NL
        division:
          type: string
          enum:
          - EAST
          - CENTRAL
          - WEST
        totalGames:
          type: integer
          format: int32
          maximum: 162
          minimum: 0
        wins:
          type: integer
          format: int32
          maximum: 162
          minimum: 0
        losses:
          type: integer
          format: int32
          maximum: 162
          minimum: 0
        pct:
          type: number
          format: double
          maximum: 1.0
          minimum: 0.0
        gamesBehind:
          type: number
          format: double
          minimum: 0.0
        lastTen:
          type: integer
          format: int32
          maximum: 10
          minimum: 0
      required:
      - abbreviation
      - division
      - league
      - name
      - teamLogo
    UserRole:
      type: object
      properties:
        username:
          type: string
        roles:
          type: array
          items:
            type: string
      required:
      - username
